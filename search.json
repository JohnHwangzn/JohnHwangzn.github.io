[{"title":"搭建 Hexo 博客并部署到 GitHub Pages 流程","url":"/2022/07/27/搭建 Hexo 博客并部署到 Github-Pages 流程/","content":"\n\n# 搭建 Hexo 博客并部署到 GitHub Pages 流程\n\n# 0. 前言\n\n[Hexo](https://hexo.bootcss.com/) 是一个静态博客（纯 HTML 格式）框架，使用 Markdown 解析文章，支持一键部署到 [GitHub Pages](https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages)、Heroku 等静态网站托管平台上。Hexo 是目前最主流的静态博客框架之一，同类型的框架还有 [Hugo](https://gohugo.io/)、[jekyll](https://jekyllrb.com/)。\n\n关于这三款框架的对比，可以参见 [Jekyll / Hugo / Hexo Comparison | The Coding Notes (lexcao.io)](https://lexcao.io/posts/jekyll-hugo-hexo/)。\n\n# 1. 搭建步骤\n\nHexo 依赖以下两个应用程序：\n\n- Git\n- Node.js\n\n## 1.1 安装 Git\n\nGit 是一个版本控制系统，可以跟踪文件修改历史，通常用于程序的协同开发。\n\n- Windows：下载并安装 [Git - Downloading Package (git-scm.com)](https://git-scm.com/download/win)-\n- 镜像下载地址：[淘宝 Git for Windows 镜像](https://npm.taobao.org/mirrors/git-for-windows/)\n    \n    \n\n验证安装：\n\n```powershell\n> git --version\n```\n\n如果能正常返回版本信息，则说明安装成功。\n\n## 1.2 安装 Node.js\n\nNode.js 是一个 JavaScript 运行时环境（***runtime environment***），主要用于在服务器端执行 JavaScript 代码。\n\nNPM（“Node Package Manager”）是 JavaScript 运行时 Node.js 的默认程序包管理器，主要用于发布，托管和下载 JavaScript 程序包。\n\n- Windows：下载并安装 [Download | Node.js (nodejs.org)](https://nodejs.org/en/download/)\n- 镜像下载地址：[淘宝 Node.js 镜像](https://npm.taobao.org/mirrors/node)\n    \n    \n\n验证安装：\n\n```powershell\n> node -v\n> npm -v\n```\n\n如果能正常返回版本信息，则说明安装成功。\n\n## 1.3 安装 Hexo\n\n安装完 Node.js 以后，即可使用 npm 来安装 hexo:\n\n```powershell\n> npm install -g hexo-cli\n```\n\n<aside>\n由于网络问题，如果 npm 安装过程可能比较缓慢，则可以考虑更换软件源。\n\n</aside>\n\n```powershell\n# 查看现有源\nnpm config get registry\n\n# 设置淘宝源\nnpm config set registry https://registry.npm.taobao.org\n\n# 更新包\nnpm update\n```\n\n更换源以后，再次执行上面的安装命令即可。\n\n## 1.4 快速建站\n\nhexo 安装完成以后，执行以下命令初始化一个 hexo 工程：\n\n```powershell\n> hexo init <folder>\n> cd <folder>\n> npm install\n```\n\n初始化完成后，生成新的目录 `<folder>`，其目录结果如下：\n\n```powershell\n.\n├── _config.yml   # 网站的配置信息\n├── package.json  # 应用程序的信息\n├── scaffolds     # 模版文件夹（模板指的是在新建的文章文件中默认添加的内容）：当新建文章时，Hexo 会根据 scaffold 来构建文件。\n├── source        # 用户资源\n|   ├── _drafts      # 草稿\n|   └── _posts       # 发布稿\n└── themes        # 主题，hexo 会根据 themes 来生成静态页面\n```\n\n接着，生成静态网页文件：\n\n```powershell\n> npm generate\n```\n\n此时一个新的目录 `<folder>/public` 被生成，它是网站的根目录。在 source 目录下，所有 Markdown 和 HTML 文件会被解析后放到 public 文件夹，而其他文件会被直接拷贝过去。注意，除了 _posts 以外，其他带 _ 的文件/目录都会被忽略，即不会被放到 public 目录下。\n\n新的目录结构如下：\n\n```\n.\n├── _config.yml   # 网站的配置信息\n├── package.json  # 应用程序的信息\n├── scaffolds     # 模版文件夹（模板指的是在新建的文章文件中默认添加的内容）：当新建文章时，Hexo 会根据 scaffold 来构建文件。\n|   ├── draft.md      # 草稿模版\n|   ├── page.md       # 页面模板\n|   └── post.md       # 文章模板\n├── source        # 用户资源\n|   ├── _drafts      # 草稿\n|   └── _posts       # 发布稿\n├── themes        # 主题，hexo 会根据 themes 来生成静态页面\n└── public        # 网站根目录。source 目录下，Markdown 和 HTML 文件会被解析后放到 public 文件夹，而其他文件会被直接拷贝过去。\n    ├── css         # 注意，除了 _posts 以外，其他带 _ 的文件/目录都会被忽略，即不会被放到 public 目录下。\n    ├── js\n    └── ···     \n                                    \n```\n\n最后，打开本地服务器，并用浏览器访问网页 `http://localhost:4000/`：\n\n```powershell\n> hexo s\n\nINFO  Start processing\nINFO  Hexo is running at **http://localhost:4000/** . Press Ctrl+C to stop.\n```\n\n至此，一个网站就搭建完成了！\n\n## 1.5 设置 Github Pages\n\n现在，我们将这个网站部署到 Github Pages 上。\n\n步骤如下：\n\n1. 注册 Github 账号，[注册](https://github.com/)。\n    \n    \n2. 创建一个仓库（**Repository**），取名必须是 ```<username>.github.io``` \n<br/>\n    \n![](1-GitHub_Pages.png)\n    \n3. 配置 SSH 免密登录\n    \n    由于提交代码到 GitHub 需要账号权限，因此需要登录账号。考虑到安全和方便，我们不直接使用账号和密码，而使用 ssh 的公钥密钥机制进行登录。具体操作如下：\n    \n    - 在本机执行以下命令，并复制输出的内容：\n        \n        ```powershell\n        > ssh-keygen -t rsa -C <github email>\n        > cat C:\\Users\\<username>\\.ssh\\id_rsa.pub\n        ```\n        \n    - 打开 GitHub 账户菜单中的 Setting ⇒ SSH and GPG keys ⇒ New SSH key ，然后将复制的内容粘贴到此处，点击 `Add SSH key` 即可。\n    \n4. 验证 SSH 免密登录是否配置成功\n    \n    在本机执行以下命令：\n    \n    ```powershell\n    > ssh -T git@github.com \n    \n    如果提示:\n    Are you sure you want to continue connecting (yes/no)?\n    则输入: yes\n    \n    看到以下信息，则说明配置成功。\n    Hi <your username>! You've successfully authenticated, but GitHub does not provide shell access. \n    ```\n    \n5. 配置 Git 账号信息\n    \n    ```powershell\n    > git config --global user.name \"<your username>\"\n    > git config --global user.email \"<your github email>\" \n    ```\n    \n6. 在 `<folder>` 目录下安装 hexo-deployer-git 插件\n    \n    ```powershell\n    > cd <folder> # <folder> 是你的 hexo 工程目录\n    > npm install hexo-deployer-git --save\n    ```\n    \n7. 配置部署信息。编辑 `<folder>/_config.yml` 文件，并添加以下内容：\n    \n    ```powershell\n    deploy:\n        type: git\n        repository: git@github.com:JohnHwangzn/JohnHwangzn.github.io.git\n        branch: main\n    ```\n    \n    其中 repository 的值为 GitHub 仓库地址\n    \n8. 将网站文件推送到 GitHub 仓库\n    \n    ```powershell\n    > hexo deploy\n    ```\n    \n9. 等待 2-3 分钟后，打开网址 `https://<your username>.github.io`，就可以看到网站已经部署成功了。\n    \n    \n\n# 2. Hexo 的基本操作\n\n## 2.1 Hexo 工程的目录结构\n\n```\n.\n├── _config.yml   # 网站的配置信息\n├── package.json  # 应用程序的信息\n├── scaffolds     # 模版文件夹（模板指的是在新建的文章文件中默认添加的内容）：当新建文章时，Hexo 会根据 scaffold 来构建文件。\n|   ├── draft.md      # 草稿模版\n|   ├── page.md       # 页面模板\n|   └── post.md       # 文章模板\n├── source        # 用户资源\n|   ├── _drafts      # 草稿\n|   └── _posts       # 发布稿\n├── themes        # 主题，hexo 会根据 themes 来生成静态页面\n└── public        # 网站根目录。source 目录下，Markdown 和 HTML 文件会被解析后放到 public 文件夹，而其他文件会被直接拷贝过去。\n    ├── css         # 注意，除了 _posts 以外，其他带 _ 的文件/目录都会被忽略，即不会被放到 public 目录下。\n    ├── js\n    └── ···      \n                                    \n```\n\n各文件/目录的功能说明如下：\n\n- `_config.yml` : 可以进行以下设置：****网站信息、网址结构、目录配置、文章属性、分类&标签、日期/时间格式、分页、扩展、处理或忽略某些目录、使用替代配置文件****等****。****\n- `package.json` : 应用程序的信息。每个 JavaScript 项目（无论是 Node.js 还是浏览器应用程序）都可以被当作 npm 软件包，并且通过  `package.json` 来描述项目和软件包信息。\n- `scaffolds`  :   [模版](https://hexo.io/zh-cn/docs/writing)目录。当您新建文章时，Hexo 会根据 scaffold 来构建文件。模板指的是在新建的文章文件中默认添加的内容。\n- `source` ：存放用户所有文件的地方。\n- `themes` ：主题目录。Hexo 会根据主题来生成静态页面。\n- `public` ：当 hexo 生成静态页面时，在 `source` 目录下的 Markdown 和 HTML 文件会被解析并放到 `public` 目录下，而其他文件会被直接拷贝过去。注意，除 `_posts`文件夹之外，开头命名为 `_` (下划线)的文件 / 目录和隐藏的文件将会被忽略。\n\n## 2.2 创建新的文章/页面\n\n创建一篇新的文章或页面：\n\n```\n> hexo new [layout] <title>\n```\n\n### 布局（layout）\n\nhexo 的三种默认的布局：`post`、`page` 和 `draft`。这三种不同类型的文件，在被创建时，会被保存到不同的路径，对应的保存路径如下：\n\n- `post`: ```source/_posts```  \n- `page`: ```source```         \n- `draft`: ```source/_drafts``` \n\n\n### 草稿（draft）\n\n如果新建了一个草稿，那么它将会被存储在 `source/_drafts` 下。草稿默认不会显示在页面中，不过可以在执行时加上`--draft` 参数来预览草稿。可以通过 `publish` 命令将草稿移动至 `source/_posts` 目录下：\n\n```\n> hexo publish [layout] <title>\n```\n\n### 模板（Scaffold）\n\n在新建文章时，Hexo 会根据 `scaffolds` 目录下与名称相对应的文件来构建文章，例如：\n\n```\n> hexo new photo \"a wonderful day\"\n```\n\n在执行这条执行时，Hexo 会在 `scaffolds` 目录下寻找 `[photo.md](http://photo.md)` ，并根据其内容来构建文章。\n\n在模板中可以使用以下变量：\n\n\n- `layout`: 布局\n- `title`: 标题`\n- `date`: 文件建立日期\n\n\n# 3. 配置 Hexo 主题\n\nHexo 有一个主题社区：[Themes | Hexo](https://hexo.io/themes/)，在上面可以下载许多不同风格的主题。下面就以 AirCloud 主题为例，说明如何配置 Hexo 主题。\n\nAirCloud 主题预览：[http://niexiaotao.cn/](http://niexiaotao.cn/)\n\nAirCloud 下载地址：[https://github.com/aircloud/hexo-theme-aircloud](https://github.com/aircloud/hexo-theme-aircloud) \n\n## 3.1 下载主题\n\n在 `<folder>/themes` 目录下，下载 AirCloud 主题：\n\n```powershell\n> cd <folder>/themes\n> git clone https://github.com/aircloud/hexo-theme-aircloud.git\n> cd hexo-theme-aircloud\n```\n\n主题目录结构如下：\n\n```powershell\n.\n├── _config.yml  # 主题配置文件。在此处修改配置时，服务器会自动更新，而无需重启\n├── languages    # 语言文件夹\n├── layout       # 布局。用于存放主题的模板文件，决定了网站内容的呈现方式，\n├── scripts      # 脚本文件夹。在启动时，Hexo 会载入此文件夹内的 JavaScript 文件。\n└── source       # 资源文件夹，功能与 hexo 工程下的 source 目录相同。\n```\n\n## 3.2 配置主题\n\n![](2-Hexo主题.png)\n\n**启动 hexo-theme-aircloud 主题**\n\n设置 `<folder>/_config.yml` 的 `theme` 参数为 hexo-theme-aircloud，就可以启动该主题。\n\n```powershell\ntheme: hexo-theme-aircloud-master\n```\n\n**启动主题中的全局搜索功能**\n\n为了使用搜索功能，首先需要安装以下插件：\n\n```powershell\n> npm i hexo-generator-search --save\n```\n\n然后在 `<folder>/_config.yml` 中进行如下配置：\n\n```powershell\nsearch:\n    path: search.json\n    field: post\n```\n\n**`标签`与`关于`页面**\n\n新项目默认没有 `标签` 页面和 `关于` 页面，需要在 source 目录下新建 tags 目录和 about 目录。推荐使用如下命令来新建，因为这样新建的目录可以被 hexo 所索引。\n\n```powershell\n> hexo new page tags\n> hexo new page about\n```\n\n接着，在 tags 目录下新建 [index.md](http://index.md) ，并写入：\n\n```powershell\n---\nlayout: \"tags\"\ntitle: \"Tags\"\n---\n```\n\n在 about 目录下新建 [index.md](http://index.md) ，并写入：\n\n```powershell\n---\nlayout: \"about\"\ntitle: \"About\"\ndate: 2022-7-27 07:54:00\n---\n```\n\n****favicon 配置****\n\n项目的 favicon 默认在 `<folder>/source/img` 下面，在 `<folder>/source/img` 下面添加 favicon.ico 即可。\n\n**头像配置**\n\n同 favicon 配置，在 `<folder>/source/img` 添加头像图片，然后在 `<folder>/_config.yml` 中配置如下内容：\n\n```powershell\nsidebar-avatar: img/<picture_file>\n```\n\n****底部自定义****\n\n直接在 `<folder>/_config.yml` 中配置相应的内容即可。\n\n```powershell\n# SNS settings\n# 一些社交平台地址，支持以下几种：\nweibo_username:     3286578617\nzhihu_username:     ai-er-lan-xue-da\ngithub_username:    AirCloud\ntwitter_username:   iconie_alloy\nfacebook_username:  xiaotao.nie.5\nlinkedin_username:  小涛-聂-80964aba\n```\n\n**更多配置**\n\n更多配置可以参考：\n\n- [https://github.com/aircloud/hexo-theme-aircloud](https://github.com/aircloud/hexo-theme-aircloud)\n- [https://github.com/aircloud/hexo-aircloud-blog/blob/master/_config.yml](https://github.com/aircloud/hexo-aircloud-blog/blob/master/_config.yml)\n\n## 3.3 生成新的静态文件，运行并部署\n\n至此，已经对主题进行了一些基本的配置。接着，生成新的静态文件，在本地服务器测试没问题后，部署到 GitHub Pages 上即可。\n\n```powershell\n> hexo clean\n> hexo generate\n> hexo server\n```\n\n```powershell\n> hexo deploy\n```\n\n等待 2-3 分钟后，打开网址`https://<your username>.github.io`，就可以看到网站已经部署成功了。\n\n# 总结\n\n这篇博客介绍了 hexo 静态博客框架、 GitHub Pages 静态网站托管平台以及如何搭建 Hexo 博客并部署到 GitHub Pages 的全流程，包括软件的安装与配置、初始化 Hexo 工程，Hexo 的基本操作、将 Hexo 文件推送到 GitHub 仓库以及配置 Hexo 主题。希望对你有所帮助。\n\n如果你想了解更多，可以查阅参考链接。\n\n# 参考\n\n- Hexo 博客搭建教程：[https://www.bilibili.com/read/cv12633102/](https://www.bilibili.com/read/cv12633102/)\n- 文档 | Hexo：[https://hexo.io/zh-cn/docs/](https://hexo.io/zh-cn/docs/)\n- Hexo 主题社区：[https://hexo.io/themes/](https://hexo.io/themes/)\n- AirCloud 主题地址：[https://github.com/aircloud/hexo-theme-aircloud](https://github.com/aircloud/hexo-theme-aircloud)\n- 什么是 npm：[https://chinese.freecodecamp.org/news/what-is-npm-a-node-package-manager-tutorial-for-beginners/](https://chinese.freecodecamp.org/news/what-is-npm-a-node-package-manager-tutorial-for-beginners/)\n- GitHub Pages： [https://pages.github.com/](https://pages.github.com/)","tags":["博客"]}]